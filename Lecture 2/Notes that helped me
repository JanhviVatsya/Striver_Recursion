1.) When to use loop and when not...

Problem 1: Combination Sum II

Each number can be used at most once.

Input may have duplicates â†’ we must skip duplicates.

Thatâ€™s why we use a for loop.

ðŸ‘‰ Why?
Because at each recursion step, we are exploring all possible next choices starting from index.
We iterate i from index to n-1:

Pick one element (candidates[i])

Recurse with i+1 (move forward so we donâ€™t reuse the same element).

Continue exploring next elements in loop.

The for loop is the mechanism to try each next element once per level.

Problem 2: Combination Sum I

Each number can be used unlimited times.

Input has distinct numbers only.

Thatâ€™s why we donâ€™t use a for loop.

ðŸ‘‰ Why?
Here, we only have two choices per index:

Take the element (and stay at the same index, since unlimited use allowed).

Skip the element (move to index+1).

So we donâ€™t need a loop. Instead, we branch recursion explicitly:

recursion(index, â€¦) â†’ take current element again

recursion(index+1, â€¦) â†’ move to next element
---------------------------------------------------------------------------------------------------------------------









